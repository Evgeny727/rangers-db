# import UserInfo from 'fragments.graphql'


fragment UserProfile on rangers_users {
  id
  handle
  created_at
  friends {
    user {
      ...UserInfo
    }
  }
  sent_requests {
    user {
      ...UserInfo
    }
  }
  received_requests {
    user {
      ...UserInfo
    }
  }
}

fragment NavProfile on rangers_users {
  id
  handle
  received_requests_aggregate {
    aggregate {
      count
    }
  }
}

query getNavProfile($id: String!) {
  profile: rangers_users_by_pk(id: $id) {
    ...NavProfile
  }
}

query getProfile($id: String!) {
  profile: rangers_users_by_pk(id: $id) {
    ...UserProfile
  }
  settings: rangers_user_settings_by_pk(user_id: $id) {
    user_id
    private_decks
    pack_collection
    adhere_taboos
  }
}
query getProfileByHandle($handle: String!) {
  profile: rangers_users(
    where: {
      handle: {
        _ilike: $handle
      }
    }
	) {
    ...UserProfile
  }
}

mutation updateFriendRequest($userId: String!, $action: String!) {
  rangers_update_friend_request(
    args: {
      target_user_id: $userId,
      action: $action
    }
  ) {
  	id
  }
}

mutation setHandle($handle: String!) {
  rangers_set_handle(
    args: {
      handle: $handle
    }
  ) {
    id
    handle
  }
}


query searchHandles(
  $normalizedHandle: String!,
  $normalizedHandleStart: String!,
  $offset: Int
) {
  startMatch: rangers_users(
    where: {
			normalized_handle: { _ilike: $normalizedHandleStart }
    }
    limit: 20
    offset: $offset
  ) {
    id
    handle
  }
  looseMatch: rangers_users(
    where: {
			normalized_handle: { _ilike: $normalizedHandle }
    }
    limit: 20
    offset: $offset
  ) {
    id
    handle
  }
}
